# Generated by Django 4.2.16 on 2024-10-06 20:20

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Position',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=255, null=True, unique=True, verbose_name='Название должности')),
            ],
            options={
                'verbose_name': 'Должность',
                'verbose_name_plural': 'Должности',
            },
        ),
        migrations.CreateModel(
            name='Relative',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('full_name', models.TextField(blank=True, default='', max_length=255, null=True, verbose_name='ФИО')),
                ('gender', models.CharField(blank=True, choices=[('male', 'Мужской'), ('female', 'Женский')], default='male', max_length=10, null=True, verbose_name='Пол')),
                ('relation', models.CharField(blank=True, choices=[('parent', 'Родитель'), ('legal_representative', 'Законный представитель'), ('disabled', 'Брат/сестра')], default='parent', max_length=200, null=True, verbose_name='Отношение')),
            ],
            options={
                'verbose_name': 'Родственник',
                'verbose_name_plural': 'Родственники',
            },
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='Название/номер')),
                ('floor', models.CharField(blank=True, choices=[('1', '1'), ('2', '2')], default='1', max_length=10, null=True, verbose_name='Этаж')),
            ],
            options={
                'verbose_name': 'Комната',
                'verbose_name_plural': 'Комнаты',
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('full_name', models.TextField(blank=True, default='', max_length=255, null=True, verbose_name='ФИО')),
                ('status', models.CharField(blank=True, choices=[('actual', 'Актуальный'), ('in_process', 'В обработке'), ('finished', 'Закончил')], default='actual', max_length=20, null=True, verbose_name='Статус')),
                ('gender', models.CharField(blank=True, choices=[('male', 'Мужской'), ('female', 'Женский')], default='male', max_length=10, null=True, verbose_name='Пол')),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name='Дата рождения')),
                ('age_group', models.CharField(blank=True, choices=[('0-7', '0-7 лет'), ('8-13', '8-13 лет'), ('14-17', '14-17 лет'), ('18', '18+ лет')], default='18+', max_length=5, null=True, verbose_name='Возрастная группа')),
                ('debts', models.TextField(blank=True, default='', null=True, verbose_name='Долги')),
                ('note', models.TextField(blank=True, default='', verbose_name='Примечание')),
                ('residence_address', models.TextField(blank=True, default='', null=True, verbose_name='Адрес проживания')),
                ('registration_address', models.TextField(blank=True, default='', null=True, verbose_name='Адрес прописки')),
                ('is_city', models.BooleanField(blank=True, choices=[(True, 'Город'), (False, 'Село')], default=True, null=True, verbose_name='Город/село')),
                ('contact_phone', models.CharField(blank=True, default='', max_length=20, null=True, verbose_name='Контактный телефон')),
                ('capacity_status', models.CharField(blank=True, choices=[('capable', 'Дееспособный'), ('incapable', 'Недееспособный'), ('partially_incapable', 'Частично недееспособный')], default='capable', max_length=20, null=True, verbose_name='Установление недееспособности')),
                ('attendance_status', models.CharField(blank=True, choices=[('attends', 'Ходит'), ('not_attends', 'Не ходит'), ('periodically', 'Периодически')], default='attends', max_length=20, null=True, verbose_name='Отметка посещаемости')),
                ('has_education', models.TextField(blank=True, default='', help_text='Школьное, ср.специальное', null=True, verbose_name='Образование')),
                ('has_additional_education', models.BooleanField(blank=True, default=False, null=True, verbose_name='Доп.образование / Кружки')),
                ('additional_education_name', models.TextField(blank=True, default='', null=True, verbose_name='Название кружков')),
                ('has_sports', models.BooleanField(blank=True, default=False, null=True, verbose_name='Спорт')),
                ('sports_name', models.TextField(blank=True, default='', null=True, verbose_name='Название спорта')),
                ('has_other_social_services', models.BooleanField(blank=True, default=False, null=True, verbose_name='Услуги соцзащиты в др. учреждениях')),
                ('refused_diagnostics', models.BooleanField(blank=True, default=False, null=True, verbose_name='Отказ от диагностики СП')),
                ('refused_photo', models.BooleanField(blank=True, default=False, null=True, verbose_name='Отказ от фото')),
                ('contract_number', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='№ Договора')),
                ('contract_date', models.DateField(blank=True, null=True, verbose_name='Дата договора')),
                ('ippsu_number', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='№ ИППСУ')),
                ('ippsu_date', models.DateField(blank=True, null=True, verbose_name='Дата ИППСУ')),
                ('certificate_202n', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Справка 202Н')),
                ('disability_group', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Группа инвалидности')),
                ('disease', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='Заболевание')),
                ('ipra_number', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='№ИПРА')),
                ('ipra_date', models.DateField(blank=True, null=True, verbose_name='Дата ИПРА')),
                ('limitation_degree', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='Степень ограничений')),
                ('mse_number', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='МСЭ №')),
                ('mse_date', models.DateField(blank=True, null=True, verbose_name='Дата МСЭ')),
                ('family_composition', models.CharField(blank=True, choices=[('complete', 'Полная'), ('incomplete', 'Неполная')], default='complete', max_length=20, null=True, verbose_name='Состав семьи')),
                ('family_category', models.CharField(blank=True, choices=[('large', 'Многодетная'), ('low_income', 'Малообеспеченная'), ('normal', 'Нормальная')], default='normal', max_length=20, null=True, verbose_name='Категория семьи')),
                ('payment_type', models.CharField(blank=True, choices=[('paid', 'Платно'), ('free', 'Бесплатно')], default='paid', max_length=20, null=True, verbose_name='Оплата услуг')),
                ('has_summer_camp', models.BooleanField(blank=True, default=False, null=True, verbose_name='Лагерь/лето')),
                ('summer_camp_note', models.TextField(blank=True, default='', null=True, verbose_name='Лагерь/лето примечание')),
                ('district', models.CharField(blank=True, max_length=255, null=True, verbose_name='Район')),
                ('parent_contract_number', models.CharField(blank=True, max_length=200, null=True, verbose_name='№ Договора родителя')),
                ('parent_contract_date', models.DateField(blank=True, null=True, verbose_name='Дата договора родителя')),
                ('parent_ippsu_number', models.CharField(blank=True, max_length=200, null=True, verbose_name='№ ИППСУ родителя')),
                ('parent_ippsu_date', models.DateField(blank=True, null=True, verbose_name='Дата ИППСУ родителя')),
                ('parent_certificate_202n_date', models.DateField(blank=True, null=True, verbose_name='Справка 202Н дата выдачи родителя')),
                ('pmpk_date', models.DateField(blank=True, null=True, verbose_name='ПМПК дата')),
                ('pmpk_number', models.CharField(blank=True, max_length=200, null=True, verbose_name='ПМПК номер')),
                ('loyalty', models.BooleanField(blank=True, default=True, null=True, verbose_name='Лояльность')),
                ('specialist_change_refusal', models.BooleanField(blank=True, default=False, null=True, verbose_name='Отказ от замены специалиста')),
                ('additional_data', models.TextField(blank=True, null=True, verbose_name='Дополнительные данные')),
                ('relatives', models.ManyToManyField(blank=True, related_name='students', to='schedule.relative', verbose_name='Родственники')),
            ],
            options={
                'verbose_name': 'Обучающиеся',
                'verbose_name_plural': 'Обучающиеся',
            },
        ),
        migrations.CreateModel(
            name='Specialist',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('full_name', models.TextField(blank=True, default='', max_length=255, null=True, verbose_name='ФИО')),
                ('status', models.CharField(blank=True, choices=[('staff', 'Штатный'), ('guest', 'Гость'), ('dismissed', 'Уволен')], default='staff', max_length=20, null=True, verbose_name='Статус')),
                ('gender', models.CharField(blank=True, choices=[('male', 'Мужской'), ('female', 'Женский')], default='male', max_length=10, null=True, verbose_name='Пол')),
                ('position', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='schedule.position', verbose_name='Должность')),
            ],
            options={
                'verbose_name': 'Специалист',
                'verbose_name_plural': 'Специалисты',
            },
        ),
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='Название занятия')),
                ('time_start', models.DateTimeField(blank=True, null=True, verbose_name='Время начала')),
                ('time_end', models.DateTimeField(blank=True, null=True, verbose_name='Время конца')),
                ('room', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='schedule.room', verbose_name='Кабинет (номер)')),
                ('specialists', models.ManyToManyField(blank=True, to='schedule.specialist', verbose_name='Специалисты')),
                ('students', models.ManyToManyField(blank=True, related_name='schedule_students', to='schedule.student', verbose_name='Обучающиеся')),
            ],
            options={
                'verbose_name': 'Расписание',
                'verbose_name_plural': 'Расписания',
            },
        ),
        migrations.CreateModel(
            name='Attendance',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_present', models.BooleanField(default=False, verbose_name='Присутствовал')),
                ('schedule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendances', to='schedule.schedule')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='schedule.student')),
            ],
            options={
                'verbose_name': 'Посещаемость',
                'verbose_name_plural': 'Посещаемость',
                'unique_together': {('schedule', 'student')},
            },
        ),
    ]
